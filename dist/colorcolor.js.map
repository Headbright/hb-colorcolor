{"version":3,"sources":["../node_modules/color-name/index.js","colorcolor.js"],"names":["colorcolor","color","newColor","calculateOpacity","toLowerCase","returnedColor","r","g","b","a","namedColor","require","colorDefinitions","rgb","re","example","toRGBA","bits","parseInt","rgba","parseFloat","hex","hex3","hexa","hex4a","hsl","hslToRgb","hsla","hsv","hsvToRgb","hsb","colorDefinition","hasOwnProperty","forEach","piece","index","toString","slice","join","processor","exec","channels","Math","round","isNaN","calculateOpacityFromWhite","rgbToHsl","h","s","l","rgbToHsv","v","min","toFixed","q","p","hueToRgb","max","d","i","floor","f","t","toPercent","amount","limit","module","exports","global"],"mappings":"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","file":"colorcolor.js","sourceRoot":"../src","sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","function colorcolor(color, newColor = \"rgba\", calculateOpacity = false) {\n  color = color.toLowerCase();\n  newColor = newColor.toLowerCase();\n  var returnedColor = color;\n  var namedColor = require(\"color-name\");\n  var r, g, b, a;\n  var roundTo = 4;\n  var colorDefinitions = {\n    rgb: {\n      re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n      example: [\"rgb(123, 234, 45)\", \"rgb(255,234,245)\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1], 10),\n          parseInt(bits[2], 10),\n          parseInt(bits[3], 10),\n          1\n        ];\n      }\n    },\n    rgba: {\n      re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\s*\\)/,\n      example: [\"rgba(123, 234, 45, 1)\", \"rgba(255,234,245, 0.5)\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1], 10),\n          parseInt(bits[2], 10),\n          parseInt(bits[3], 10),\n          parseFloat(bits[4])\n        ];\n      }\n    },\n    hex: {\n      re: /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      example: [\"00ff00\", \"336699\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1], 16),\n          parseInt(bits[2], 16),\n          parseInt(bits[3], 16),\n          1\n        ];\n      }\n    },\n    hex3: {\n      re: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      example: [\"fb0\", \"f0f\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1] + bits[1], 16),\n          parseInt(bits[2] + bits[2], 16),\n          parseInt(bits[3] + bits[3], 16),\n          1\n        ];\n      }\n    },\n    hexa: {\n      re: /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      example: [\"00ff00ff\", \"336699a0\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1], 16),\n          parseInt(bits[2], 16),\n          parseInt(bits[3], 16),\n          parseInt(bits[4], 16) / 255\n        ];\n      }\n    },\n    hex4a: {\n      re: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      example: [\"fb0f\", \"f0f8\"],\n      toRGBA: function(bits) {\n        return [\n          parseInt(bits[1] + bits[1], 16),\n          parseInt(bits[2] + bits[2], 16),\n          parseInt(bits[3] + bits[3], 16),\n          parseInt(bits[4] + bits[4], 16) / 255\n        ];\n      }\n    },\n    hsl: {\n      re: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n      example: [\"hsl(120, 100%, 25%)\", \"hsl(0, 100%, 50%)\"],\n      toRGBA: function(bits) {\n        bits[4] = 1;\n        var rgba = hslToRgb(bits);\n        return [rgba.r, rgba.g, rgba.b, rgba.a];\n      }\n    },\n    hsla: {\n      re: /^hsla\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%,\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\s*\\)/,\n      example: [\"hsla(120, 100%, 25%, 1)\", \"hsla(0, 100%, 50%, 0.5)\"],\n      toRGBA: function(bits) {\n        var rgba = hslToRgb(bits);\n        return [rgba.r, rgba.g, rgba.b, rgba.a];\n      }\n    },\n    hsv: {\n      re: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n      example: [\"hsv(120, 100%, 25%)\", \"hsv(0, 100%, 50%)\"],\n      toRGBA: function(bits) {\n        var rgb = hsvToRgb(bits);\n        return [rgb.r, rgb.g, rgb.b, 1];\n      }\n    },\n    hsb: {\n      re: /^hsb\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n      example: [\"hsb(120, 100%, 25%)\", \"hsb(0, 100%, 50%)\"],\n      toRGBA: function(bits) {\n        var rgb = hsvToRgb(bits);\n        return [rgb.r, rgb.g, rgb.b, 1];\n      }\n    }\n  };\n\n  // If this is a named color, convert it to hex\n  if (namedColor.hasOwnProperty(color)) {\n    color = namedColor[color];\n    color.forEach(function(piece, index) {\n      \"use strict\";\n      color[index] = (\"0\" + piece.toString(16)).slice(-2);\n    });\n    color = \"#\" + color.join(\"\");\n  }\n\n  // Search the color definitions for a match\n  for (let colorDefinition in colorDefinitions) {\n    let re = colorDefinitions[colorDefinition].re;\n    let processor = colorDefinitions[colorDefinition].toRGBA;\n    let bits = re.exec(color);\n    if (bits) {\n      let channels = processor(bits);\n      r = channels[0];\n      g = channels[1];\n      b = channels[2];\n      a = +(Math.round(channels[3] + (\"e+\" + roundTo)) + (\"e-\" + roundTo));\n    }\n  }\n  r = Math.round(r < 0 || isNaN(r) ? 0 : r > 255 ? 255 : r);\n  g = Math.round(g < 0 || isNaN(g) ? 0 : g > 255 ? 255 : g);\n  b = Math.round(b < 0 || isNaN(b) ? 0 : b > 255 ? 255 : b);\n  a = a < 0 || isNaN(a) ? 0 : a > 1 ? 1 : a;\n\n  switch (newColor) {\n    case \"hex\":\n      returnedColor =\n        \"#\" +\n        (\"0\" + r.toString(16)).slice(-2) +\n        (\"0\" + g.toString(16)).slice(-2) +\n        (\"0\" + b.toString(16)).slice(-2);\n      break;\n    case \"hexa\":\n      if (calculateOpacity) {\n        [r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n      }\n      returnedColor =\n        \"#\" +\n        (\"0\" + r.toString(16)).slice(-2) +\n        (\"0\" + g.toString(16)).slice(-2) +\n        (\"0\" + b.toString(16)).slice(-2) +\n        (\"0\" + Math.round(255 * a).toString(16)).slice(-2);\n      break;\n    case \"hsl\":\n      let hsl = rgbToHsl({ r: r, g: g, b: b });\n      returnedColor = `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`;\n      break;\n    case \"hsla\":\n      if (calculateOpacity) {\n        [r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n      }\n      let hsla = rgbToHsl({ r: r, g: g, b: b, a: a });\n      returnedColor = `hsla(${hsla.h},${hsla.s}%,${hsla.l}%,${hsla.a})`;\n      break;\n    case \"hsb\":\n      /* Same as `hsv` */\n      let hsb = rgbToHsv({ r: r, g: g, b: b });\n      returnedColor = `hsb(${hsb.h},${hsb.s}%,${hsb.v}%)`;\n      break;\n    case \"hsv\":\n      let hsv = rgbToHsv({ r: r, g: g, b: b });\n      returnedColor = `hsv(${hsv.h},${hsv.s}%,${hsv.v}%)`;\n      break;\n    case \"rgb\":\n      returnedColor = `rgb(${r},${g},${b})`;\n      break;\n    case \"rgba\":\n    /* falls through */\n    default:\n      if (calculateOpacity) {\n        [r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n      }\n      returnedColor = `rgba(${r},${g},${b},${a})`;\n      break;\n  }\n\n  return returnedColor;\n}\n\nfunction calculateOpacityFromWhite(r, g, b, a) {\n  \"use strict\";\n  var min = 0;\n  a = (255 - (min = Math.min(r, g, b))) / 255;\n  r = (0 || (r - min) / a).toFixed(0);\n  g = (0 || (g - min) / a).toFixed(0);\n  b = (0 || (b - min) / a).toFixed(0);\n  a = parseFloat(a.toFixed(4));\n\n  return [r, g, b, a];\n}\n\nfunction hslToRgb(bits) {\n  var rgba = {},\n    hsl = {\n      h: bits[1] / 360,\n      s: bits[2] / 100,\n      l: bits[3] / 100,\n      a: parseFloat(bits[4])\n    };\n  if (hsl.s === 0) {\n    let v = 255 * hsl.l;\n    rgba = {\n      r: v,\n      g: v,\n      b: v,\n      a: hsl.a\n    };\n  } else {\n    let q = hsl.l < 0.5 ? hsl.l * (1 + hsl.s) : hsl.l + hsl.s - hsl.l * hsl.s;\n    let p = 2 * hsl.l - q;\n    rgba.r = hueToRgb(p, q, hsl.h + 1 / 3) * 255;\n    rgba.g = hueToRgb(p, q, hsl.h) * 255;\n    rgba.b = hueToRgb(p, q, hsl.h - 1 / 3) * 255;\n    rgba.a = hsl.a;\n  }\n\n  return rgba;\n}\n\nfunction rgbToHsl(rgba) {\n  rgba.r = rgba.r / 255;\n  rgba.g = rgba.g / 255;\n  rgba.b = rgba.b / 255;\n  var max = Math.max(rgba.r, rgba.g, rgba.b),\n    min = Math.min(rgba.r, rgba.g, rgba.b),\n    hsl = [],\n    d;\n  hsl.a = rgba.a;\n  hsl.l = (max + min) / 2;\n  if (max === min) {\n    hsl.h = 0;\n    hsl.s = 0;\n  } else {\n    d = max - min;\n    hsl.s = hsl.l >= 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case rgba.r:\n        hsl.h = (rgba.g - rgba.b) / d + (rgba.g < rgba.b ? 6 : 0);\n        break;\n      case rgba.g:\n        hsl.h = (rgba.b - rgba.r) / d + 2;\n        break;\n      case rgba.b:\n        hsl.h = (rgba.r - rgba.g) / d + 4;\n        break;\n    }\n    hsl.h /= 6;\n  }\n  hsl.h = parseInt((hsl.h * 360).toFixed(0), 10);\n  hsl.s = parseInt((hsl.s * 100).toFixed(0), 10);\n  hsl.l = parseInt((hsl.l * 100).toFixed(0), 10);\n\n  return hsl;\n}\n\nfunction hsvToRgb(bits) {\n  var rgb = {},\n    hsv = {\n      h: bits[1] / 360,\n      s: bits[2] / 100,\n      v: bits[3] / 100\n    },\n    i = Math.floor(hsv.h * 6),\n    f = hsv.h * 6 - i,\n    p = hsv.v * (1 - hsv.s),\n    q = hsv.v * (1 - f * hsv.s),\n    t = hsv.v * (1 - (1 - f) * hsv.s);\n  switch (i % 6) {\n    case 0:\n      rgb.r = hsv.v;\n      rgb.g = t;\n      rgb.b = p;\n      break;\n    case 1:\n      rgb.r = q;\n      rgb.g = hsv.v;\n      rgb.b = p;\n      break;\n    case 2:\n      rgb.r = p;\n      rgb.g = hsv.v;\n      rgb.b = t;\n      break;\n    case 3:\n      rgb.r = p;\n      rgb.g = q;\n      rgb.b = hsv.v;\n      break;\n    case 4:\n      rgb.r = t;\n      rgb.g = p;\n      rgb.b = hsv.v;\n      break;\n    case 5:\n      rgb.r = hsv.v;\n      rgb.g = p;\n      rgb.b = q;\n      break;\n  }\n  rgb.r = rgb.r * 255;\n  rgb.g = rgb.g * 255;\n  rgb.b = rgb.b * 255;\n\n  return rgb;\n}\n\nfunction rgbToHsv(rgba) {\n  rgba.r = toPercent(parseInt(rgba.r, 10) % 256, 256);\n  rgba.g = toPercent(parseInt(rgba.g, 10) % 256, 256);\n  rgba.b = toPercent(parseInt(rgba.b, 10) % 256, 256);\n  var max = Math.max(rgba.r, rgba.g, rgba.b),\n    min = Math.min(rgba.r, rgba.g, rgba.b),\n    d = max - min,\n    hsv = {\n      h: 0,\n      s: max === 0 ? 0 : d / max,\n      v: max\n    };\n  if (max !== min) {\n    switch (max) {\n      case rgba.r:\n        hsv.h = (rgba.g - rgba.b) / d + (rgba.g < rgba.b ? 6 : 0);\n        break;\n      case rgba.g:\n        hsv.h = (rgba.b - rgba.r) / d + 2;\n        break;\n      case rgba.b:\n        hsv.h = (rgba.r - rgba.g) / d + 4;\n        break;\n    }\n    hsv.h /= 6;\n  }\n  hsv.h = parseInt((hsv.h * 360).toFixed(0), 10);\n  hsv.s = parseInt((hsv.s * 100).toFixed(0), 10);\n  hsv.v = parseInt((hsv.v * 100).toFixed(0), 10);\n\n  return hsv;\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * ((2 / 3 - t) * 6);\n  }\n\n  return p;\n}\n\nfunction toPercent(amount, limit) {\n  return amount / limit;\n}\n\nmodule.exports = colorcolor;\nglobal.colorcolor = module.exports; /* ew */\n"]}